//내 풀이
    public int solution(int[][] routes) {
        int answer = 0;
        ArrayList<Pair> arrayList = new ArrayList<>();

        Queue<Pair> queue = new LinkedList();

        for (int i = 0; i < routes.length; i++) {

            arrayList.add(new Pair(i, Math.abs(routes[i][0] - routes[i][1])));

        }


        arrayList.sort(new Comparator<Pair>() {

            @Override
            public int compare(Pair o1, Pair o2) {
                if (o1.second > o2.second) {
                    return 1;
                } else {
                    return -1;
                }
            }
        });

        for (int i = 0; i < routes.length; i++) {

            Pair pair = (Pair) arrayList.get(i);
            int first = (int) pair.first;
            Pair p = new Pair(routes[first][0], routes[first][1]);
            queue.add(p);

        }

        Pair pair1;
        Pair pair2;

        while (!queue.isEmpty()) {


            pair1 = (Pair) queue.poll();
            int size = queue.size();
            
            answer++;
            for (int i = 0; i < size; i++) {

                pair2 = (Pair) queue.poll();
                if ((pair2.first <= pair1.first && pair1.first <= pair2.second) || (pair2.first <= pair1.second && pair1.first <= pair2.second)) {
                    continue;
                } else {
                    queue.add(pair2);
                }

            }
        }

        return answer;
    }

    //    //[[-20,15], [-14,-5], [-18,-13], [-5,-3]]	2
    //
    ////-5 =>2,4
    //
    ////-15 =>1,3


    class Pair {
        Integer first;
        Integer second;

        public Pair(Integer first, Integer second) {
            this.first = first;
            this.second = second;
        }

        public Integer first() {
            return first;
        }

        public Integer second() {
            return second;
        }
    }


//정답
class Solution { public int solution(int[][] routes) { 
int answer = 0; // 카메라의 갯수 int camera = -30001; // 카메라의 위치
Arrays.sort(routes, (a, b) -> Integer.compare(a[1], b[1])); 
for (int[] route : routes) { 
if (camera < route[0]) { camera = route[1]; answer++; } }
return answer; } }

