import java.util.*
class Solution {
      private lateinit var parent: IntArray

    //최상위 부모찾기
    fun find(x: Int):Int {

        if (parent[x]==x) return x
        else {
            parent[x] = find(parent[x])
            return parent[x]
        }

    }

    //두개 최상위 부모찾기
    fun merge(a: Int, b: Int):Boolean {

       var a=find(a)
       var b=find(b)

        if (a==b){
            return false
        }
        else{
            if (a>b){
                parent[a]=b
            }else{
                parent[b]=a
            }
        }
        return true
    }

    fun solution(n: Int, costs: Array<IntArray>): Int {
    var parent1= IntArray(n)
        var answer = 0

        for (i in 0 until n) {
            parent1[i] = i
        }
parent=parent1
        Arrays.sort(costs) { a, b -> a[2].compareTo(b[2]) }

        for (i in costs.indices) {

            if (merge(costs[i][0],costs[i][1])){
answer+=costs[i][2]

            }

        }
        return answer
    }



}
